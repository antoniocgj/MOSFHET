CC = gcc
FLAGS = -Wall -Wno-unused-function -Wno-unused-result -funroll-all-loops -march=native -lm
DEBUG_FLAGS = -O1 -g $(FLAGS)
INCLUDE_DIRS = $(addprefix $(MOSFHET_DIR), /include)
OPT_FLAGS = -O3 -fwhole-program -flto  $(FLAGS)
LIB_FLAGS = -O3 $(FLAGS)
__SRC = keyswitch.c bootstrap.c bootstrap_ga.c tlwe.c trlwe.c  trgsw.c misc.c	polynomial.c register.c sha3/fips202.c fft/karatsuba.c
LIBS = 
LD_LIBS =
BUILD_LIBS = 
TEST_FLAGS = $(OPT_FLAGS)
FFT_LIB = spqlios_avx512
A_PRNG = vaes
ENABLE_VAES = true

ifeq ($(A_PRNG),shake)
	FLAGS += -DUSE_SHAKE -DUSE_COMPRESSED_TRLWE
	__SRC += trlwe_compressed.c
else ifeq ($(A_PRNG),vaes)
	__SRC += trlwe_compressed_vaes.c
	FLAGS += -DUSE_COMPRESSED_TRLWE
else ifeq ($(A_PRNG),xoshiro)
	__SRC += trlwe_compressed.c
	FLAGS += -DUSE_COMPRESSED_TRLWE
endif

ifdef TORUS32
 FLAGS += -DTORUS32
endif

ifndef FAST_DEBUG
 FLAGS += -DNDEBUG
endif

ifdef PORTABLE_BUILD
	FFT_LIB=ffnt
	FLAGS += -DUSE_SHAKE
else
  __SRC += ./rnd/aes_rng.c
endif

ifeq ($(ENABLE_VAES), true)
	FLAGS += -DVAES_OPT
endif

ifeq ($(FFT_LIB),spqlios)
	FLAGS += -DUSE_SPQLIOS
	__SRC += ./fft/spqlios/spqlios-fft-fma.s ./fft/spqlios/spqlios-ifft-fma.s ./fft/spqlios/spqlios-fft-impl.c ./fft/spqlios/fft_processor_spqlios.c
else ifeq ($(FFT_LIB),spqlios_avx512)
	FLAGS += -DUSE_SPQLIOS -DAVX512_OPT
	__SRC += ./fft/spqlios/spqlios-fft-avx512.s ./fft/spqlios/spqlios-ifft-avx512.s ./fft/spqlios/spqlios-fft-impl-avx512.c ./fft/spqlios/fft_processor_spqlios.c
else ifeq ($(FFT_LIB),ffnt_opt)
	FLAGS += -DFMA_OPT
  __SRC += ./fft/ffnt/ffnt.c
else
	FLAGS += -DPORTABLE_BUILD
  __SRC += ./fft/ffnt/ffnt.c
endif

SRC_MOSFHET = $(addprefix $(MOSFHET_DIR)/src/, $(__SRC))
INCLUDE_FLAGS = $(addprefix -I, $(INCLUDE_DIRS))
FLAGS += $(INCLUDE_FLAGS)
